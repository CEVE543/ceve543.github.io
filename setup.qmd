---
title: "Setting Up Your Computer"
---

Getting set up for this course requires the following steps.
If you are an experienced programmer, you are free to follow your own workflow to set up these tools.
You will absolutely need Quarto, GitHub, and Julia.
If you are not an experienced programmer, the following steps are not the _only_ way to get these tools set up, but they are a _very good_ way.

If you install course tools using steps other than the ones provided on this page, be aware that your instructors may be able to provide you with only limited support.

## Install Julia

I recommend installing Julia using the `juliaup` tool, which will let you easily manage versions in the future and works seamlessly with VS Code.
The instructions can be found at the [JuliaUp GitHub repository](https://github.com/JuliaLang/juliaup), but we will summarize them here.

### Installing Juliaup on Windows

If your computer uses Windows, you can install Juliaup [from the Windows Store](https://www.microsoft.com/store/apps/9NJNWW8PVKMN).

### Installing Juliaup on MacOS

If you have a Mac, open a terminal (such as the Terminal app) and enter:
```shell
curl -fsSL https://install.julialang.org | sh
```

### Installing Julia 1.9

Once you install Juliaup, install Julia version 1.9 by opening a terminal (in MacOS or Linux) or the command line (in Windows) and entering:
```shell
julia add 1.9
julia default 1.9
```

This will install Julia 1.9 and make it the default version, which should maximize package compatibility throughout this course.
Going forward, if you want to add new versions or change the default, you can [follow the Juliaup instructions](https://github.com/JuliaLang/juliaup#using-juliaup).

### More Resources

See [this tutorial](tutorials/julia-basics.qmd) for more information on using Julia.

## Install and Set Up VS Code

You can skip this section if you already have an IDE you like; just set it up to work with Julia.
Otherwise, VS Code is as close to an officially supported editor for Julia as you can get.
We will follow [this guide for setting up VS Code with Julia](https://www.julia-vscode.org/docs/dev/gettingstarted/).

### Installing VS Code

You can download it [here](https://code.visualstudio.com/download); open the downloaded file to install.
Make sure to select the correct version for your operating system.
If you have a recent Apple mac, make sure to check whether you have an Intel or Apple chip.

### Install the Julia Extension

1. Open VS Code. 
2. Select View and click Extensions to open the Extension View. 
3. Search for `julia` in the search box. Click the green install button.
4. Restart VS Code once the installation is complete. It should automatically find your Julia installation; reach out if not.

The Julia VS Code extension offers you some nice features.
You can start a REPL (an interactive Julia coding environment) by opening the "Command Palette" (View -> Command Palette, or CTRL/CMD+SHIFT+P) and typing "REPL" to bring up "Julia: Start REPL". 
You can also create `.jl` and `.qmd` files to write Julia code and execute line by line.

### More Resources

See [this tutorial](tutorials/julia-basics.qmd) for more information on using Julia.

## Set Up GitHub

### Create GitHub Account

If you already have a GitHub account, you can use that for this course and do not need to create a new account.
Otherwise, [create an account](https://github.com/join). It doesn't have to be linked to your Rice email or your NetID.

For labs and projects, you should use the GitHub Classroom link posted on Canvas to "accept" the assignment, which will give you your own GitHub repository for that assignment.
The first time you click one of these links, you will need to link your place on the course roster with your GitHub account.

### GitHub Desktop (Optional)

You can do almost everything that you will need to do for this course with GitHub directly through VS Code.
The GitHub [desktop app](https://desktop.github.com/) is also great, or alternatively you may work directly through the terminal if you have prior experience.

### Install Git

`git` is a version control software that powers GitHub under the hood (`git` is the version control software, GitHub is an online platform).
Based on past experience with the course, you probably already have `git` installed.
If you're not sure if it's installed, see instructions [here](https://github.com/git-guides/install-git).

### More Resources

See [GitHub official tutorials](tutorials/github.qmd) for more helpful resources and tutorials.

## Set up Quarto

Quarto combines the best of Jupyter notebooks and R Markdown to create a document format that is ideal for conducting and communicating data science.
We will use Quarto to create and share our work in this course; this website is also built using Quarto.||

### Install Quarto

Follow the directions at https://quarto.org/docs/get-started/ to install Quarto.
Be sure to ensure that you have the right version for your operating system.

### Install the Quarto Extension for VS Code

Under "Step 2", click on the VS Code icon.

### Install Jupyter

Under the hood, Quarto uses Jupyter to run code.
You don't need to know how Jupyter works or worry about it, because it runs under the hood, but we will need to install it.

#### If you have Python installed

In your [Terminal](https://code.visualstudio.com/docs/terminal/basics) (open VS Code then open the terminal), run

```shell
python3 -m pip install jupyter
```

If this throws an error, copy and paste the error onto Canvas

#### If you don't have Python installed

1. Install Python
    1. Windows: see [Microsoft instructions](https://learn.microsoft.com/en-us/windows/python/beginners) or [Conda](https://docs.conda.io/en/latest/miniconda.html) documentation
    1. Mac/Linux: see [Conda](https://docs.conda.io/en/latest/miniconda.html) documentation
1. Follow the instructions above

### More Resources

See [this tutorial](tutorials/quarto.qmd) for more information on using Quarto.

## Verify

1. [Lab 01](labs/lab01/instructions.qmd) has a section that will help you verify that your setup is working.
1. If you have any trouble:
    1. Open VS Code
    1. In the [Terminal](https://code.visualstudio.com/docs/terminal/basics), run `quarto check`
    1. Try to troubleshoot on your own; if you can't, post the results of `quarto check` to Canvas